/*******************************************************************************
 * Copyright (c) 2017 The University of York.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Horacio Hoyos Rodriguez - initial API and implementation
 ******************************************************************************/
import '../EcoreHelper.eol';

/**
 * Create Java artifacts related to the EOL Trace Ecore metamodel. 
 *  - An ITraceModel implementaiton that exploits the metamodel information (Ecore2TraceModel.egl)
 *  - A defintion of a java interface for each EClass
 *  - An implementaiton of each EClass that delegates to TinkerPop Gremlin calls to resolve
 *      references. 
 */

pre {
    var now  = Native("java.time.LocalDate").now();
    var path_prefix = "../../../../../../../../../org.eclipse.epsilon.eol.engine.incremental/src-gen/org/eclipse/epsilon/eol/incremental/";
    var qualified_package = "org.eclipse.epsilon.eol.incremental";
}

rule EPackage2Model
  transform p : EPackage {
  
  parameters {
    var params : new Map;
    params.put("today", now.toString());
    params.put("year", now.getYear().toString()); 
    params.put("qp", qualified_package);
    return params;
  }
  
  // The EGL template to be invoked
  template : "Ecore2EolTraceModel.egl"

  // Output file
  target : path_prefix + "models/Abstract" + p.getName().firstToUpperCase() + "TraceModel.java"
  
}

rule EClass2Interface
  transform ec : EClass {
  
    parameters {
      var params : new Map;
      params.put("today", now.toString());
      params.put("year", now.getYear().toString()); 
      params.put("qp", "org.eclipse.epsilon.incremental.trace");
      params.put("pName", ec.getEPackage().name);
      return params;
    }
    //guard : not ec.isInterface()
    template : "../EClass2Interface.egl"
    target : "../../../../../../../../../org.eclipse.epsilon.eol.engine.incremental" +
             "/src-gen/org/eclipse/epsilon/incremental/trace/" + ec.getEPackage().name  + "/" + ec.name + ".java"
  }


rule EClass2GremlinImpl
  transform ec : EClass {
  
    parameters {
      var params : new Map;
      params.put("today", now.toString());
      params.put("year", now.getYear().toString()); 
      params.put("qp", "org.eclipse.epsilon.eol.incremental.trace");
      return params;
    }
    guard : not ec.isInterface()
    template : "Eclass2EolGremlinImpl.egl"
    target : "../../../../../../../../../org.eclipse.epsilon.eol.engine.incremental.tinkerpop" +
             "/src-gen/org/eclipse/epsilon/eol/incremental/trace/tinkerpop/Abstract" + ec.name + "Impl.java"
  }


post {
 "GenDone".println();
}