[%
import "EcoreHelper.eol";

@template
operation EStructuralFeature makeGetterDoc() {%]
/**
 * Returns the value of the '<em><b>[%=self.getName().splitCamelCase()%]</b></em>' attribute.
 [%=out.startPreserve("* <!--", "-->", self.getName()+"-getter-doc", true)%]
 * <p>
 * If the meaning of the '<em>[%=self.getName().splitCamelCase()%]</em>' attribute isn't clear,
 * there really should be more of a description here...
 * </p>
 [%=out.stopPreserve()%] 
 * @return the value of the '<em>[%=self.getName().splitCamelCase()%]</em>' attribute.
 * @see #set[%=self.getName().firstToUpperCase()%](String)
 */[%}

@template
operation EStructuralFeature makeSetterDoc() {%]
/**
 * Sets the value of the '{@link [%=self.getEContainingClass.getName()%]#[%=self.getName().firstToUpperCase()%] <em>[%=self.getName().splitCamelCase()%]</em>}' attribute.
 [%=out.startPreserve("* <!--", "-->", self.getName()+"-setter-doc", true)%]
 [%=out.stopPreserve()%] 
 * @param value the new value of the '<em>[%=self.getName().splitCamelCase()%]/em>' attribute.
 * @see #get[%=self.getName().firstToUpperCase()%]()
 */[%}

// To make this more reusable we could split into method name, return type and parameters!
@template
operation EStructuralFeature getGetterMethodName() {%]
get[%=self.getName().firstToUpperCase()%]
[%}

@template
operation EStructuralFeature getSetterMethodName() {%]
set[%=self.getName().firstToUpperCase()%]
[%}

@template
operation EAttribute makeGetterSignature(multiType : String) {%]
[%=self.getGetterReturnType(multiType)%] [%=self.getGetterMethodName()%]()
[%}

@template
operation EAttribute getGetterReturnType(multiType : String) {if (self.isMany()) {%]
[%=multiType%]<[%=self.getEAttributeType().getInstanceTypeName()%]>
[%  } else {%][%=self.getEAttributeType().getInstanceTypeName()%][% }
}


@template
operation EAttribute makeSetterSignature(multiType : String) {%]
[%=self.getSetterReturnType()%] [%=self.getSetterMethodName()%]([%=self.getSetterParamterType(multiType)%] [%=self.getSetterParamterName()%])
[%}

@template
operation EAttribute getSetterReturnType() {%]
void
[%}

@template
operation EAttribute getSetterParamterType(multiType : String) {if (self.isMany()) {%]
[%=multiType%]<[%=self.getEAttributeType().getInstanceTypeName()%]>    
[%  } else {%][%=self.getEAttributeType().getInstanceTypeName()%][% }
}

@template
// self.getEAttributeType().getName().firstToLowerCase()?
operation EAttribute getSetterParamterName() {%]
value
[%}

@template
operation EReference makeGetterSignature(multiType : String, typePrefix, typeSufix) {%]
[%=self.getGetterReturnType(multiType, typePrefix, typeSufix)%] [%=self.getGetterMethodName()%]()
[%}

@template
operation EReference getGetterReturnType(multiType : String, typePrefix, typeSufix) {if (self.isMany()) {%]
[%=multiType%]<[%=self.getEReferenceType().getJavaTypeName(typePrefix, typeSufix)%]>
[%  } else {%][%=self.getEReferenceType().getJavaTypeName(typePrefix, typeSufix)%][% }
}

@template
operation EReference makeSetterSignature(typePrefix, typeSufix) {%]
[%=self.getSetterReturnType()%] [%=self.getSetterMethodName()%]([%=self.getSetterParamterType(typePrefix, typeSufix)%] [%=self.getSetterParamterName()%])
[%}

@template
operation EReference getSetterReturnType() {%]
void
[%}

@template
operation EReference getSetterParamterType(typePrefix, typeSufix) {%]
[%=self.getEReferenceType().getJavaTypeName(typePrefix, typeSufix)%]
[%}

@template
operation EReference getSetterParamterName() {%]
value
[%}
%]
